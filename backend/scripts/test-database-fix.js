// TESTE DA CORRE√á√ÉO DO BANCO DE DADOS
const { PrismaClient } = require('@prisma/client');

async function testDatabaseFix() {
  console.log('üß™ TESTE DA CORRE√á√ÉO DO BANCO DE DADOS');
  console.log('=======================================');
  
  try {
    // 1. Verificar vari√°veis de ambiente
    console.log('\nüîß 1. VERIFICANDO VARI√ÅVEIS DE AMBIENTE...');
    const databaseUrl = process.env.DATABASE_URL;
    
    if (databaseUrl) {
      console.log('‚úÖ DATABASE_URL encontrada');
      console.log(`üìä URL: ${databaseUrl.substring(0, 20)}...`);
    } else {
      console.log('‚ùå DATABASE_URL n√£o encontrada');
      console.log('üîç Verificar arquivo .env');
    }
    
    // 2. Testar conex√£o com configura√ß√£o atual
    console.log('\nüîå 2. TESTANDO CONEX√ÉO COM CONFIGURA√á√ÉO ATUAL...');
    const prisma = new PrismaClient();
    
    try {
      await prisma.$connect();
      console.log('‚úÖ Conex√£o estabelecida com sucesso');
      
      // Testar query simples
      const userCount = await prisma.user.count();
      console.log(`‚úÖ Total de usu√°rios: ${userCount}`);
      
    } catch (error) {
      console.error('‚ùå Erro na conex√£o:', error.message);
      
      if (error.message.includes('Can\'t reach database server')) {
        console.log('\nüîç AN√ÅLISE DO ERRO:');
        console.log('   - Servidor de banco n√£o est√° acess√≠vel');
        console.log('   - Poss√≠vel problema de rede ou configura√ß√£o');
        console.log('   - Verificar se o banco est√° rodando');
        console.log('   - Verificar se as credenciais est√£o corretas');
        
        console.log('\nüîß POSS√çVEIS SOLU√á√ïES:');
        console.log('   1. Verificar se o banco est√° rodando');
        console.log('   2. Verificar se as credenciais est√£o corretas');
        console.log('   3. Verificar se a URL do banco est√° correta');
        console.log('   4. Verificar se h√° problemas de rede');
        console.log('   5. Verificar se o banco est√° acess√≠vel externamente');
      }
    } finally {
      await prisma.$disconnect();
    }
    
  } catch (error) {
    console.error('‚ùå Erro no teste:', error.message);
  }
}

// Executar teste
testDatabaseFix();

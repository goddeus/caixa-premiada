/**
 * Teste simples do sistema de saque
 */

const axios = require('axios');

const API_BASE_URL = 'http://localhost:3000';

async function testWithdrawSystem() {
  console.log('üöÄ Testando sistema de saque...');
  
  try {
    // Teste 1: Verificar se a rota de saque existe
    console.log('\n1. Testando rota de saque...');
    const response = await axios.post(`${API_BASE_URL}/api/withdraw/pix`, {
      amount: 25.00,
      pixKey: 'teste@email.com',
      pixKeyType: 'email'
    }, {
      headers: {
        'Content-Type': 'application/json',
        'Authorization': 'Bearer invalid-token'
      }
    });
    
    console.log('‚ùå Rota n√£o est√° protegida corretamente');
  } catch (error) {
    if (error.response?.status === 401) {
      console.log('‚úÖ Rota protegida corretamente (401 Unauthorized)');
    } else {
      console.log(`‚ùå Erro inesperado: ${error.response?.status} - ${error.response?.data?.message}`);
    }
  }

  // Teste 2: Verificar rota de estat√≠sticas
  console.log('\n2. Testando rota de estat√≠sticas...');
  try {
    const response = await axios.get(`${API_BASE_URL}/api/withdraw/stats`, {
      headers: {
        'Authorization': 'Bearer invalid-token'
      }
    });
    console.log('‚ùå Rota de estat√≠sticas n√£o est√° protegida');
  } catch (error) {
    if (error.response?.status === 401) {
      console.log('‚úÖ Rota de estat√≠sticas protegida corretamente');
    } else {
      console.log(`‚ùå Erro inesperado: ${error.response?.status}`);
    }
  }

  // Teste 3: Verificar rota de hist√≥rico
  console.log('\n3. Testando rota de hist√≥rico...');
  try {
    const response = await axios.get(`${API_BASE_URL}/api/withdraw/history`, {
      headers: {
        'Authorization': 'Bearer invalid-token'
      }
    });
    console.log('‚ùå Rota de hist√≥rico n√£o est√° protegida');
  } catch (error) {
    if (error.response?.status === 401) {
      console.log('‚úÖ Rota de hist√≥rico protegida corretamente');
    } else {
      console.log(`‚ùå Erro inesperado: ${error.response?.status}`);
    }
  }

  // Teste 4: Verificar rota de todos os saques (admin)
  console.log('\n4. Testando rota de todos os saques...');
  try {
    const response = await axios.get(`${API_BASE_URL}/api/withdraw/all`, {
      headers: {
        'Authorization': 'Bearer invalid-token'
      }
    });
    console.log('‚ùå Rota de admin n√£o est√° protegida');
  } catch (error) {
    if (error.response?.status === 401) {
      console.log('‚úÖ Rota de admin protegida corretamente');
    } else {
      console.log(`‚ùå Erro inesperado: ${error.response?.status}`);
    }
  }

  console.log('\nüéâ Testes de rotas conclu√≠dos!');
}

// Executar teste
testWithdrawSystem().catch(console.error);
